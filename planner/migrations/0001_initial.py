# Generated by Django 2.0.3 on 2018-04-01 01:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=2)),
                ('name', models.CharField(max_length=50)),
                ('sheriff_phone_number', models.CharField(blank=True, help_text='Number must be in XXX-XXX-XXXX format', max_length=12)),
            ],
            options={
                'ordering': ['state', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('latitude', models.FloatField(help_text='Degrees N/S, between -90 and 90')),
                ('longitude', models.FloatField(help_text='Degrees E/W, between -180 and 180')),
                ('elevation', models.FloatField(verbose_name='Elevation [ft]')),
                ('dest_type', models.CharField(choices=[('m', 'Mountain'), ('l', 'Lake'), ('w', 'Waterfall'), ('o', 'Other')], max_length=2, verbose_name='Destination Type')),
                ('description', models.TextField(blank=True, max_length=5000)),
                ('county', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='planner.County')),
            ],
        ),
        migrations.CreateModel(
            name='GoverningBody',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2)),
                ('level_of_government', models.CharField(choices=[('f', 'Federal'), ('st', 'State'), ('co', 'County'), ('ci', 'City'), ('p', 'Private')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Jurisdiction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('website', models.URLField(blank=True, help_text='Home page URL')),
                ('parking_info', models.TextField(blank=True, verbose_name='Parking Information')),
                ('camping_info', models.TextField(blank=True, verbose_name='Camping Information')),
                ('governing_body', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='planner.GoverningBody')),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('total_distance', models.FloatField(help_text='Full trip distance, in miles: length for one-way routes, or round trip distance for loop and out-and-back routes', verbose_name='Total Distance [mi]')),
                ('gain', models.IntegerField(verbose_name='Total Elevation Gain [ft]')),
                ('path_seq', models.CharField(choices=[('oab', 'Out-And-Back'), ('ow', 'One-Way'), ('l', 'Loop')], max_length=3, verbose_name='Route Sequence')),
                ('class_rating', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Yosemite Decimal System (1-5)', verbose_name='Class')),
                ('description', models.TextField(blank=True, max_length=5000)),
                ('destination', models.ManyToManyField(blank=True, help_text='Destinations accessible by this route', null=True, to='planner.Destination', verbose_name='Accessible Destination(s)')),
                ('jurisdiction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='planner.Jurisdiction')),
            ],
        ),
        migrations.CreateModel(
            name='Trailhead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('latitude', models.FloatField(help_text='Degrees N/S, between -90 and 90')),
                ('longitude', models.FloatField(help_text='Degrees E/W, between -180 and 180')),
                ('county', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='planner.County')),
                ('jurisdiction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='planner.Jurisdiction')),
            ],
        ),
        migrations.AddField(
            model_name='route',
            name='trailhead',
            field=models.ManyToManyField(to='planner.Trailhead'),
        ),
        migrations.AddField(
            model_name='destination',
            name='jurisdiction',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='planner.Jurisdiction'),
        ),
    ]
